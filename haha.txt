*** Settings ***
Suite Setup       setup    order_item
Suite Teardown    teardown
Test Setup        case_setup
Test Teardown     case_teardown
Library           SeleniumLibrary
Library           OperatingSystem
Library           DatabaseLibrary
Resource          mtresource.txt
Library           AutoItLibrary
Library           DebugLibrary

*** Test Cases ***
Case-01
    [Documentation]    xxx购物车主要功能
    [Tags]    high
    ${x}    Row Count    select * from scott.order_item where name='ipad' and quantity=123;
    ${y}    Evaluate    str($x+1)
    debug
    log    2，点击自动化测试课程
    Click Element    link=自动化测试课程    #link定位符
    Click Element    partial link=接口    #parital link定位符
    Click Link    自动化测试课程
    log    3，输入产品名称及数量
    Wait Until Element Is Visible    id=pay1    #等待网页下载成功（显示等待）
    Input Text    id=ProductName    ipad
    Input Text    name=Quantity    123
    log    4，点击提交
    Click Element    id=submitBtn
    log    5，确认提交成功
    log    5.1，确认前端提示信息正确
    Wait Until Page Contains    你购买了ipad，一共123件    #等待后台处理15s，检查提示信息
    Page Should Contain    你购买了ipad，一共123件    # 检查方式1
    ${x}    Get Text    id=msg    #检查方式2
    Should Be Equal    ${x}    你购买了ipad，一共123件。
    log    5.2，确认前端购物车信息正确
    Select Frame    fra    #进入iframe/frame
    Select From List By Label    buy    产品:ipad,数量:123    #处理select下拉列表
    log    5.3，确认后台数据库订单表信息正确
    Comment    comment    PAUSE    #打断点
    Wait Until Keyword Succeeds    30    1    Check If Not Exists In Database    select * from scott.order_item where name='ipad' and quantity=123;    #30秒内，每1秒钟执行一次，直至成功（可处理所有情况）
    Check If Exists In Database    select * from scott.order_item where name='ipad' and quantity=123;    #确认至少有1行
    Row Count Is Equal To X    select * from scott.order_item where name='ipad' and quantity=123;    ${y}    #确认有且只有1行
    Comment    ${x}    Row Count    select * from scott.order_item where name='ipad' and quantity=123;
    log    6，点击付款
    Unselect Frame    #退出iframe
    Click Button    付款
    Handle Alert    ACCEPT    #处理弹出的alert对话框
    log    7，切换到付款窗口
    sleep    2    #强制等待新窗口弹出
    ${x}    Get Window Handles
    Select Window    付款    #选择title是付款的window
    Select Window    ${x[-1]}    #处理没有title的window
    log    8,输入银行卡号，完成付款
    Input Text    cardno    111111111
    Click Button    付款
    Handle Alert
    Execute Sql String    DELETE FROM order_item where name='ipad' and quantity=123;    #恢复数据库环境

Case-02
    [Documentation]    xxx购物车主要功能
    [Tags]    high
    log    2，点击自动化测试课程
    Click Element    css=body > div.container > div.masthead > div > div > div > ul > li:nth-child(3) > a    #css选择器定位符
    log    3，输入产品名称及数量
    Input Text    css=#ProductName    ipad
    Input Text    xpath=//*[@id="Quantity"]    123    #xpath定位符
    log    4，点击提交
    Click Element    id=submitBtn
    log    5，确认提交成功
    log    5.1，确认前端提示信息正确
    Page Should Contain    你购买了ipad，一共123件    # 检查方式1
    ${x}    Get Text    id=msg    #检查方式2
    Should Be Equal    ${x}    你购买了ipad，一共123件。
    Click Element    datepicker    #日期控件
    Click Element    //*[@id="ui-datepicker-div"]/table/tbody/tr[2]/td[2]/a
    Execute Javascript    document.getElementById('datepicker').readOnly=false
    input text    datepicker    08/27/2018
    sleep    5

case_03
    [Template]    tpl_orer
    ipad    123    #测试数据和流程分离（数据驱动）
    apple    100
    香蕉    10

case_04
    log    2，点击自动化测试课程
    Click Element    css=body > div.container > div.masthead > div > div > div > ul > li:nth-child(3) > a    #css选择器定位符
    log    3，输入产品名称及数量
    Execute Javascript    document.getElementById('ProductName').value='apple'    #所有浏览器都支持
    Execute Javascript    $("#Quantity").val("10")

case_05
    log    2，点击自动化测试课程
    Click Element    link=自动化测试课程
    Wait Until Element Is Visible    link=上传下载demo页面
    Click link    上传下载demo页面
    Wait Until Element Is Visible    id=file
    Click Element    id=file
    Win Wait    打开    \    20
    Win Activate    打开
    Control Set Text    \    \    Edit1    ${CURDIR}${/}mtresource.txt    #上传文件
    Control Click    \    \    Button1
    sleep    5
    Set Browser Implicit Wait    0    #隐式等待时间，默认为0，如果设置的时间过长影响脚本的运行时间 \ \ \ \ \ \ 设置隐式等待时间，控制浏览器在定位失败时返回响应时间

Case-06
    log    1.点击自动化测试
    Click Element    jquery=a:contains("自动化测试")    #css=a[href='#/downloads']
    log    2.输入产品名称及数量
    Input Text    jquery=#ProductName    apple
    Input Text    jquery=[id="Quantity"]    100
    log    3.点击提交
    Click Element    id=submitBtn

*** Keywords ***
case_setup
    Execute Sql String    delete from order_item;

case_teardown
    Select Window

tpl_orer
    [Arguments]    ${pname}    ${quan}
    log    2，点击自动化测试课程
    Click Element    css=body > div.container > div.masthead > div > div > div > ul > li:nth-child(3) > a    #css选择器定位符
    log    3，输入产品名称及数量
    Input Text    css=#ProductName    ${pname}
    Input Text    xpath=//*[@id="Quantity"]    ${quan}    #xpath定位符
    log    4，点击提交
    Click Element    id=submitBtn
    log    5，确认提交成功
    log    5.1，确认前端提示信息正确
    Page Should Contain    你购买了${pname}，一共${quan}件    # 检查方式1
    ${x}    Get Text    id=msg    #检查方式2
    Should Be Equal    ${x}    你购买了${pname}，一共${quan}件。
